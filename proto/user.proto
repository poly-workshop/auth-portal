syntax = "proto3";
option go_package = "github.com/poly-workshop/auth-portal/pkg/proto";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

enum UserRole {
  USER = 0;
  ADMIN = 1;
}

message User {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string name = 4;
  string email = 5;
  UserRole role = 6;
  optional string github_id = 7;
}

service UserService {
  rpc CreateUser(CreateUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post : "/v1/users"
      body : "*"
    };
  }
  rpc GetCurrentUser(google.protobuf.Empty) returns (User) {
    option (google.api.http) = {
      get : "/v1/users/me"
    };
  }
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get : "/v1/users/{id}"
    };
  }
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get : "/v1/users"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      patch : "/v1/users/{id}"
      body : "*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/users/{id}"
    };
  }
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  UserRole role = 3;
  optional string password = 4;
  optional string github_id = 5;
}

message GetUserRequest { string id = 1; }

message ListUsersRequest {
  uint64 page = 1;
  uint64 page_size = 2;
}
message ListUsersResponse {
  repeated User users = 1;
  uint64 total = 2;
}

message UpdateUserRequest {
  string id = 1;
  optional string name = 2;
  optional string email = 3;
  optional UserRole role = 4;
  optional string password = 5;
  optional string github_id = 6;
}

message DeleteUserRequest { string id = 1; }
message DeleteUserResponse { string id = 1; }